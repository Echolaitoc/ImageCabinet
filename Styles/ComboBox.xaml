<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ui="clr-namespace:ImageCabinet.UIHelper">
    
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <DockPanel Background="Transparent" LastChildFill="False">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" To="-180" Storyboard.TargetName="ArrowRotation" Storyboard.TargetProperty="(RotateTransform.Angle)"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked">
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetName="ArrowRotation" Storyboard.TargetProperty="(RotateTransform.Angle)"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Path Width="24" Height="24" DockPanel.Dock="Right" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z" Fill="{TemplateBinding Foreground}">
                <Path.RenderTransform>
                    <RotateTransform x:Name="ArrowRotation" CenterX="12" CenterY="12"/>
                </Path.RenderTransform>
            </Path>
        </DockPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False"/>
    </ControlTemplate>

    <Style x:Key="ComboBoxItemContainer" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Foreground" Value="{DynamicResource DefaultForeground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <ControlTemplate.Resources>
                        <ui:BrushToTransmittantBrushConverter x:Key="brushToTransmittent"/>
                    </ControlTemplate.Resources>
                    <Border x:Name="Border" Padding="0,2" SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource brushToTransmittent}, ConverterParameter=0.1}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource brushToTransmittent}, ConverterParameter=0.2}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="2,0,0,0"/>
                            <Setter TargetName="Border" Property="Padding" Value="4,2,0,2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FlatComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="{DynamicResource DefaultForeground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="0,0,24,0"/>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemContainer}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <ControlTemplate.Resources>
                        <ui:BrushToValueAdjustedBrushConverter x:Key="valueAdjust"/>
                    </ControlTemplate.Resources>
                    <Grid Background="{TemplateBinding Background}">
                        <ToggleButton x:Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Foreground="{TemplateBinding Foreground}" Focusable="false" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="{TemplateBinding Padding}" VerticalAlignment="Stretch" HorizontalAlignment="Left">
                        </ContentPresenter>
                        <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="{TemplateBinding Padding}" Focusable="True" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Border Tag="{DynamicResource DefaultBackground}" Background="{Binding Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource valueAdjust}, ConverterParameter=0.2}" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}" CornerRadius="4" Margin="4">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="1" Direction="270" BlurRadius="10" Color="{DynamicResource ShadowColor}"/>
                                </Border.Effect>
                                <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Popup" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>